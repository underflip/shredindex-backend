<?php namespace RainLab\User\Models;

use Request;
use October\Rain\Database\ExpandoModel;

/**
 * UserLog Model
 *
 * @property int $user_id
 * @property string $type
 * @property array $data
 * @property array $comment
 * @property bool $is_comment is_comment flags this log item as a comment
 * @property bool $is_system is_system flags this log item as generated by an admin or system
 * @property int $updated_user_id
 * @property int $created_user_id
 * @property \Illuminate\Support\Carbon $updated_at
 * @property \Illuminate\Support\Carbon $created_at
 *
 * @package rainlab\user
 * @author Alexey Bobkov, Samuel Georges
 */
class UserLog extends ExpandoModel
{
    use \October\Rain\Database\Traits\Validation;
    use \October\Rain\Database\Traits\UserFootprints;
    use \RainLab\User\Models\UserLog\HasModelAttributes;

    const TYPE_NEW_USER = 'new-user';
    const TYPE_SET_EMAIL = 'set-email';
    const TYPE_SET_PASSWORD = 'set-password';
    const TYPE_SET_TWO_FACTOR = 'set-two-factor';
    const TYPE_SELF_VERIFY = 'self-verify';
    const TYPE_SELF_LOGIN = 'self-login';
    const TYPE_SELF_DELETE = 'self-delete';
    const TYPE_INTERNAL_COMMENT = 'internal-comment';

    /**
     * @var string table name
     */
    public $table = 'rainlab_user_user_logs';

    /**
     * @var array rules for validation
     */
    public $rules = [];

    /**
     * @var string expandoColumn name to store the data
     */
    protected $expandoColumn = 'data';

    /**
     * @var array expandoPassthru attributes that should not be serialized
     */
    protected $expandoPassthru = [
        'type',
        'comment',
        'is_comment',
        'is_system',
        'user_id',
    ];

    /**
     * @var array Relations
     */
    public $belongsTo = [
        'user' => [
            User::class,
            'scope' => 'withTrashed'
        ]
    ];

    /**
     * createRecord adds a log for a user
     */
    public static function createRecord($userId, $type, $data = [])
    {
        $data['ip_address'] = Request::ip();

        $obj = new static;
        $obj->user_id = $userId;
        $obj->type = $type;
        $obj->data = $data;
        $obj->is_comment = false;
        $obj->is_system = false;
        $obj->setExpandoAttributes($data);
        $obj->save();

        return $obj;
    }

    /**
     * createSystemRecord adds a log for a user, generated by an administrator
     */
    public static function createSystemRecord($userId, $type, $data = [])
    {
        $data['ip_address'] = Request::ip();

        $obj = new static;
        $obj->user_id = $userId;
        $obj->type = $type;
        $obj->data = $data;
        $obj->is_comment = false;
        $obj->is_system = true;
        $obj->setExpandoAttributes($data);
        $obj->save();

        return $obj;
    }

    /**
     * createSystemComment adds a comment log for a user, generated by an administrator
     */
    public static function createSystemComment($userId, $comment)
    {
        $data = [];
        $data['ip_address'] = Request::ip();

        $obj = new static;
        $obj->user_id = $userId;
        $obj->type = self::TYPE_INTERNAL_COMMENT;
        $obj->comment = $comment;
        $obj->is_comment = true;
        $obj->is_system = true;
        $obj->data = $data;
        $obj->save();

        return $obj;
    }
}
