version: 2.1

orbs:
    codecov: codecov/codecov@1.1.0

jobs:
    build-and-test:
        machine: true
        working_directory: ~/project
        steps:
            - checkout
            - run:
                name: Preparing environment from repository
                command: |
                    mv .circleci/.env.circleci .env
                    mv .infrastructure/.env.dist .infrastructure/.env
                    mv .infrastructure/docker-compose.yml.dist .infrastructure/docker-compose.yml
                    mv .infrastructure/etc/nginx/conf.d/default.conf.dist .infrastructure/etc/nginx/conf.d/default.conf
            - restore_cache:
                keys:
                    - v2-composer-{{ checksum "composer.lock" }}
            - run:
                name: docker-compose
                command: cd .infrastructure/ && docker-compose up --build -d
            - run:
                name: composer install
                command: rm -rf vendor && docker exec shredindex-backend-php composer install
            - run:
                name: Copy modified plugin
                command: |
                 mkdir -p plugins/nocio/headstart
                 cp -r plugins/modified/headstart/* plugins/nocio/headstart/
            - save_cache:
                key: v2-composer-{{ checksum "composer.lock" }}
                paths:
                    - vendor
            - run:
                name: Waiting for MySQL to warm up
                command: sleep 10
            - run:
                name: Spin up October CMS
                command: docker exec shredindex-backend-php php artisan october:migrate
            - run:
                name: Running PHPUnit tests
                command: docker exec shredindex-backend-php php artisan plugin:test underflip.resorts && docker exec -i shredindex-backend-php bash -c "cd ../../../vendor/bin/phpunit --coverage-clover ../../../coverage/clover.xml"
            - codecov/upload:
                file: ./coverage/clover.xml

workflows:
    build-and-test:
        jobs:
            - build-and-test
